name: modelfinder

on: [push]

jobs:
  build:
    env:
      DOCKER_ACCOUNT: sogis
      DOCKER_REPO: modelfinder
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      AWS_REGION: eu-west-1
      BUILD_NUMBER: ${{ github.run_number }}
    runs-on: ubuntu-latest
    steps:
      - name: Print new build number
        run: echo "Build number is $BUILD_NUMBER"
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build Jar and create Docker Image
        run: |
          ./mvnw clean package -Penv-prod
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
          docker pull $DOCKER_ACCOUNT/$DOCKER_REPO:latest
          docker build -t $DOCKER_ACCOUNT/$DOCKER_REPO:latest -f Dockerfile.jvm .
      - name: Push Docker Images
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
          docker images
          docker push $DOCKER_ACCOUNT/$DOCKER_REPO:latest
        if: ${{ github.ref == 'refs/heads/main' }}  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Push Docker Image to Amazon ECR
        env:
          ECR_REGISTRY: 465066823493.dkr.ecr.eu-west-1.amazonaws.com
          ECR_REPOSITORY: modelfinder
        run: |
          docker image tag $DOCKER_ACCOUNT/$DOCKER_REPO:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        if: ${{ github.ref == 'refs/heads/main' }}  
