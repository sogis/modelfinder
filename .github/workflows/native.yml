name: CI/CD (Native Image)

on: 
  push:
  workflow_dispatch:

jobs:
  build:
    env:
      DOCKER_ACCOUNT: sogis
      DOCKER_REPO: modelfinder
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      BUILD_NUMBER: ${{ github.run_number }}
      #DIGITALOCEAN_TOKEN: ${{secrets.DIGITALOCEAN_TOKEN}}
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm: '21.2.0'
          java: 'java11'

      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image

      - name: 'Build native image'
        run: |
          ./mvnw -e -B -q -Penv-prod,native clean package
          ls -la modelfinder-server/target

      # - name: Create Docker Image
      #   run: |
      #     echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      #     docker pull $DOCKER_ACCOUNT/$DOCKER_REPO:latest
      #     docker build -t $DOCKER_ACCOUNT/$DOCKER_REPO:latest -f sodata-server/src/main/docker/Dockerfile.native .
      #     docker tag $DOCKER_ACCOUNT/$DOCKER_REPO:latest $DOCKER_ACCOUNT/$DOCKER_REPO:0.0.$BUILD_NUMBER

      # - name: Push Docker Images
      #   if: ${{ github.ref == 'refs/heads/master' }}
      #   run: |
      #     echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      #     docker images
      #     docker push $DOCKER_ACCOUNT/$DOCKER_REPO:latest
      #     docker push $DOCKER_ACCOUNT/$DOCKER_REPO:0.0.$BUILD_NUMBER

      # - name: Deploy to Digital Ocean App Platform
      #   if: ${{ github.ref == 'refs/heads/master' }}
      #   run: |
      #     curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" "https://api.digitalocean.com/v2/apps/b259346a-0364-40b0-a221-6e62798f4c22/deployments"
